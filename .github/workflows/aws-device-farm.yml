name: AWS Device Farm CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and run instrumented tests
        run: ./gradlew build connectedDebugAndroidTest

      - name: Upload APK and test APK to AWS Device Farm
        run: |
          export APK_PATH=$(find . -type f -name "*.apk" | grep "/release/" | head -n 1)
          export TEST_APK_PATH=$(find . -type f -name "*-androidTest.apk" | head -n 1)
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export UPLOAD_URL=$(aws devicefarm create-upload --project-arn ${{ secrets.AWS_DEVICE_FARM_PROJECT_ARN }} --name MyApp.apk --type ANDROID_APP | jq -r '.upload.url')
          curl -T $APK_PATH $UPLOAD_URL
          export UPLOAD_URL=$(aws devicefarm create-upload --project-arn ${{ secrets.AWS_DEVICE_FARM_PROJECT_ARN }} --name MyAppTests.apk --type ANDROID_INSTRUMENTATION_TEST_PACKAGE | jq -r '.upload.url')
          curl -T $TEST_APK_PATH $UPLOAD_URL

      - name: Schedule and run tests on AWS Device Farm
        run: |
          export DEVICE_POOL=$(aws devicefarm list-device-pools --arn ${{ secrets.AWS_DEVICE_FARM_PROJECT_ARN }} --type PRIVATE | jq -r '.devicePools[0].arn')
          export SCHEDULE_RUN_RESULT=$(aws devicefarm schedule-run --project-arn ${{ secrets.AWS_DEVICE_FARM_PROJECT_ARN }} --app-arn ${{ secrets.AWS_DEVICE_FARM_APP_ARN }} --device-pool-arn $DEVICE_POOL --name "My GitHub CI Run" --test type=ANDROID_INSTRUMENTATION,testPackageArn=${{ secrets.AWS_DEVICE_FARM_TEST_PACKAGE_ARN }}')
          export SCHEDULED_RUN_ARN=$(echo $SCHEDULE_RUN_RESULT | jq -r '.run.arn')
          echo "Scheduled run ARN: $SCHEDULED_RUN_ARN"
