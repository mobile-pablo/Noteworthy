name: AWS Device Farm CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  device-farm-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew assembleAndroidTest
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscliv2
    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}
    - name: Run tests on AWS Device Farm
      run: |
        PROJECT_NAME="iOS Notes"
        DEVICE_POOL="4 dev"
        TEST_PACKAGE="com.mobile.pablo.iosnotes"
        # Create a new run in AWS Device Farm
        aws devicefarm create-upload --project-name $PROJECT_NAME --name app.apk --type ANDROID_APP > app_upload.json
        aws devicefarm create-upload --project-name $PROJECT_NAME --name tests.zip --type INSTRUMENTATION_TEST_PACKAGE > test_upload.json
        # Upload the app and test package
        aws s3 cp app/build/outputs/apk/debug/app-debug.apk "$(jq -r '.upload.url' app_upload.json)"
        aws s3 cp $TEST_PACKAGE "$(jq -r '.upload.url' test_upload.json)"
        # Schedule the run
        aws devicefarm schedule-run \
          --project-arn arn:aws:devicefarm:us-west-2:406524570672:project:d0311d9b-a860-4ed8-b577-874d773a0afb \
          --app-arn "$(jq -r '.upload.appArn' app_upload.json)" \
          --device-pool-arn "$(aws devicefarm list-device-pools --query "devicePools[?name=='$DEVICE_POOL'].arn | [0]" --output text)" \
          --name "GitHub Actions Run" \
          --test "$(printf '{"type":"INSTRUMENTATION","testPackageArn":"%s"}' "$(jq -r '.upload.arn' test_upload.json)")"
